@inproceedings{kosaraju1989efficient,
  author    = {S. R. Kosaraju},
  title     = {Efficient tree pattern matching},
  booktitle = {Proceedings of the 20th IEEE Foundations of Computer Science (FOCS)},
  year      = {1989},
  pages     = {178--183}
}

@inproceedings{jacobson1989space,
  author    = {Guy Jacobson},
  title     = {Space-efficient static trees and graphs},
  booktitle = {Proceedings of the 30th IEEE Symposium on Foundations of Computer Science (FOCS)},
  year      = {1989},
  pages     = {549--554},
  publisher = {IEEE Computer Society Press},
  address   = {Los Alamitos, CA}
}

@article{ferragina2009compressing,
  author  = {Paolo Ferragina and Fabrizio Luccio and Giovanni Manzini and S. Muthukrishnan},
  title   = {Compressing and Indexing Labeled Trees, with Applications},
  journal = {Journal of the ACM},
  year    = {2009},
  volume  = {57},
  doi     = {10.1145/1613676.1613680}
}

@techreport{burrows1994block,
  author      = {M. Burrows and D. Wheeler},
  title       = {A block-sorting lossless data compression algorithm},
  institution = {Digital Equipment Corporation},
  year        = {1994},
  number      = {124}
}

@article{karkkainen2006linear,
  author  = {Juha K{\"a}rkk{\"a}inen and Peter Sanders and Stefan Burkhardt},
  title   = {Linear work suffix array construction},
  journal = {Journal of the ACM},
  year    = {2006},
  volume  = {53},
  number  = {6},
  pages   = {918--936},
  doi     = {10.1145/1217856.1217858}
}

@inproceedings{gbmp2014sea,
  title     = {From Theory to Practice: Plug and Play with Succinct Data Structures},
  author    = {Gog, Simon and Beller, Timo and Moffat, Alistair and Petri, Matthias},
  booktitle = {13th International Symposium on Experimental Algorithms, (SEA 2014)},
  year      = {2014},
  pages     = {326-337},
  ee        = {http://dx.doi.org/10.1007/978-3-319-07959-2_28}
}

@inproceedings{raman2002succinct,
  author    = {Rajeev Raman and V. Raman and S. Srinivasa Rao},
  title     = {Succinct Indexable Dictionaries with Applications to representations of k-ary trees and multi-sets},
  booktitle = {Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)},
  year      = {2002}
}

@inproceedings{grossi2003high,
  author    = {Roberto Grossi and Ankur Gupta and Jeffrey Scott Vitter},
  title     = {High-order entropy-compressed text indexes},
  booktitle = {Proceedings of the Fourteenth Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)},
  year      = {2003},
  pages     = {841--850},
  publisher = {Society for Industrial and Applied Mathematics},
  address   = {USA}
}

@book{inapproximabilityWheelerGraphs,
  title     = {On the Hardness and Inapproximability of Recognizing Wheeler Graphs.},
  author    = {Daniel Gibney and Sharma V. Thankachan},
  year      = {2019},
  publisher = {In Michael A. Bender, Ola Svensson, and Grzegorz Herman, editors, 27th Annual European Symposium on Algorithms (ESA 2019), volume 144 of Leibniz International Proceedings in Informatics (LIPIcs), pages 51:1–51:16, Dagstuhl, Germany}
}

@article{gagie2017wheeler,
  title     = {Wheeler graphs: A framework for BWT-based data structures},
  author    = {Gagie, Travis and Manzini, Giovanni and Sir{\'e}n, Jouni},
  journal   = {Theoretical computer science},
  volume    = {698},
  pages     = {67--78},
  year      = {2017},
  publisher = {Elsevier}
}

@online{topol16ogicalOrdering,
  title     = {Topological ordering},
  year      = {2022},
  publisher = {Wikipedia},
  url       = {https://it.wikipedia.org/wiki/Ordinamento_topologico}
}

@online{goemans2009matching,
  author = {Michel Goemans},
  title  = {Advanced Algorithms: Matching Notes},
  year   = {2009},
  note   = {Lecture notes, Massachusetts Institute of Technology},
  url    = {https://math.mit.edu/~goemans/18433S09/matching-notes.pdf}
}

@article{kuhn1955hungarian,
  title     = {The Hungarian method for the assignment problem},
  author    = {Kuhn, Harold W},
  journal   = {Naval research logistics quarterly},
  volume    = {2},
  number    = {1-2},
  pages     = {83--97},
  year      = {1955},
  publisher = {Wiley Online Library}
}

@inproceedings{dinic1969algorithm,
  title     = {An algorithm for the solution of the assignment problem},
  author    = {Dinic, EA and Kronrod, MA},
  booktitle = {Soviet Math. Dokl},
  volume    = {10},
  number    = {6},
  pages     = {1324--1326},
  year      = {1969}
}

@article{edmonds1972theoretical,
  title     = {Theoretical improvements in algorithmic efficiency for network flow problems},
  author    = {Edmonds, Jack and Karp, Richard M},
  journal   = {Journal of the ACM (JACM)},
  volume    = {19},
  number    = {2},
  pages     = {248--264},
  year      = {1972},
  publisher = {ACM New York, NY, USA}
}

@article{gabow1989faster,
  title     = {Faster scaling algorithms for network problems},
  author    = {Gabow, Harold N and Tarjan, Robert E},
  journal   = {SIAM Journal on Computing},
  volume    = {18},
  number    = {5},
  pages     = {1013--1036},
  year      = {1989},
  publisher = {SIAM}
}

@article{sankowski2009maximum,
  title     = {Maximum weight bipartite matching in matrix multiplication time},
  author    = {Sankowski, Piotr},
  journal   = {Theoretical Computer Science},
  volume    = {410},
  number    = {44},
  pages     = {4480--4488},
  year      = {2009},
  publisher = {Elsevier}
}

@inproceedings{chen2022maximum,
  title        = {Maximum flow and minimum-cost flow in almost-linear time},
  author       = {Chen, Li and Kyng, Rasmus and Liu, Yang P and Peng, Richard and Gutenberg, Maximilian Probst and Sachdeva, Sushant},
  booktitle    = {2022 IEEE 63rd Annual Symposium on Foundations of Computer Science (FOCS)},
  pages        = {612--623},
  year         = {2022},
  organization = {IEEE}
}

@incollection{HOPCROFT1971189,
  title     = {AN n log n ALGORITHM FOR MINIMIZING STATES IN A FINITE AUTOMATON},
  editor    = {Zvi Kohavi and Azaria Paz},
  booktitle = {Theory of Machines and Computations},
  publisher = {Academic Press},
  pages     = {189-196},
  year      = {1971},
  isbn      = {978-0-12-417750-5},
  doi       = {https://doi.org/10.1016/B978-0-12-417750-5.50022-1},
  url       = {https://www.sciencedirect.com/science/article/pii/B9780124177505500221},
  author    = {John Hopcroft},
  abstract  = {Publisher Summary
               Most basic texts on finite automata give algorithms for minimizing the number of states in a finite automaton. However, a worst case analysis of these algorithms indicates that they are n2 processes, where n is the number of states. For finite automata with large numbers of states, these algorithms are grossly inefficient. This chapter describes an algorithm for minimizing the states, in which the asymptotic running time in a worst-case analysis grows as n log n. The constant of proportionality depends linearly on the number of input symbols. The same algorithm can be used to determine if two finite automata are equivalent. Extensive use of list processing is employed to reduce the computation time. As the time needed to partition on a block is proportional to the transitions into the block, the total number of steps in the algorithm is bounded by n log n.}
}

@article{cotumaccio2023co,
  title     = {Co-lexicographically ordering automata and regular languages-Part I},
  author    = {Cotumaccio, Nicola and D’Agostino, Giovanna and Policriti, Alberto and Prezza, Nicola},
  journal   = {Journal of the ACM},
  volume    = {70},
  number    = {4},
  pages     = {1--73},
  year      = {2023},
  publisher = {ACM New York, NY}
}

@online{viswanath2004perfect,
  author = {Viswanath Nagarajan},
  title  = {Finding Perfect Matchings},
  year   = {2004},
  note   = {Lecture notes},
  url    = {https://www.cs.cmu.edu/afs/cs/academic/class/15859-f04/www/scribes/lec3.pdf}
}

@article{revuz1992minimisation,
  title     = {Minimisation of acyclic deterministic automata in linear time},
  author    = {Revuz, Dominique},
  journal   = {Theoretical Computer Science},
  volume    = {92},
  number    = {1},
  pages     = {181--189},
  year      = {1992},
  publisher = {Elsevier}
}

@article{lohrey2012grammar,
  title={Grammar-based tree compression},
  author={Lohrey, Markus},
  journal={Acta Informatica},
  volume={47},
  number={6},
  pages={427--461},
  year={2012},
  publisher={Springer}
}

@inproceedings{lohrey2011tree,
  title={Tree structure compression with repair},
  author={Lohrey, Markus and Maneth, Sebastian and Mennicke, Roy},
  booktitle={2011 Data Compression Conference},
  pages={353--362},
  year={2011},
  organization={IEEE}
}

@article{lohrey2013xml,
  title={XML tree structure compression using RePair},
  author={Lohrey, Markus and Maneth, Sebastian and Mennicke, Roy},
  journal={Information Systems},
  volume={38},
  number={8},
  pages={1150--1167},
  year={2013},
  publisher={Elsevier}
}

@inproceedings{larsson2000off,
  title={Off-line dictionary-based compression},
  author={Larsson, N. Jesper and Moffat, Alistair},
  booktitle={Proceedings DCC 2000. Data Compression Conference},
  pages={296--305},
  year={2000},
  organization={IEEE}
}

@techreport{myhill1957finite,
  author = {John Myhill},
  title = {Finite automata and the representation of events},
  institution = {Wright Air Development Center},
  number = {WADC Technical Report 57-624},
  year = {1957}
}

@article{nerode1958linear,
  author = {Anil Nerode},
  title = {Linear automaton transformations},
  journal = {Proceedings of the American Mathematical Society},
  volume = {9},
  number = {4},
  pages = {541--544},
  year = {1958},
  publisher = {American Mathematical Society}
}

@book{aho1974design,
  author    = {Alfred V. Aho and John E. Hopcroft and Jeffrey D. Ullman},
  title     = {The Design and Analysis of Computer Algorithms},
  publisher = {Addison-Wesley},
  address   = {Reading, MA},
  year      = {1974}
}

@article{lovasz1979matching,
  title={On determinants, matchings, and random algorithms},
  author={Lovász, László},
  journal={Fundamenta Mathematicae},
  volume={61},
  number={1},
  pages={61--79},
  year={1979},
  publisher={Polish Academy of Sciences, Institute of Mathematics}
}

@article{hall1935representatives,
  title={On representatives of subsets},
  author={Hall, Philip},
  journal={Journal of the London Mathematical Society},
  volume={10},
  number={1},
  pages={26--30},
  year={1935},
  publisher={Oxford University Press}
}

@mastersthesis{maso2023indexing,
  author = {Riccardo Maso},
  title  = {Indexing Finite State Automata via Co-Lex Orders},
  school = {Ca' Foscari University of Venice},
  year   = {2025},
  type   = {Master's thesis}
}

@inproceedings{cotumaccio2021indexing,
  author    = {Nicola Cotumaccio and Nicola Prezza},
  title     = {On Indexing and Compressing Finite Automata},
  booktitle = {Proceedings of the 2021 ACM-SIAM Symposium on Discrete Algorithms (SODA)},
  year      = {2021},
  pages     = {2585--2599},
  publisher = {Society for Industrial and Applied Mathematics},
  month     = {1},
  isbn      = {9781611976465},
  doi       = {10.1137/1.9781611976465.153}
}

@article{kolmogorovBlossomNewImplementation2009,
  title = {Blossom {{V}}: A New Implementation of a Minimum Cost Perfect Matching Algorithm},
  shorttitle = {Blossom {{V}}},
  author = {Kolmogorov, Vladimir},
  date = {2009-07},
  journaltitle = {Mathematical Programming Computation},
  shortjournal = {Math. Prog. Comp.},
  volume = {1},
  number = {1},
  pages = {43--67},
  issn = {1867-2949, 1867-2957},
  doi = {10.1007/s12532-009-0002-8},
  url = {http://link.springer.com/10.1007/s12532-009-0002-8},
  urldate = {2025-08-13},
  abstract = {We describe a new implementation of the Edmonds’ algorithm for computing a perfect matching of minimum cost, to which we refer as Blossom V. A key feature of our implementation is a combination of two ideas that were shown to be effective for this problem: the “variable dual updates” approach of Cook and Rohe [8] and the use of priority queues. We achieve this by maintaining an auxiliary graph whose nodes correspond to alternating trees in the Edmonds’ algorithm. While our use of priority queues does not improve the worst-case complexity, it appears to lead to an efficient technique. In the majority of our tests Blossom V outperformed previous implementations of Cook and Rohe [8] and of Mehlhorn and Sch¨afer [23], sometimes by an order of magnitude. We also show that for large VLSI instances it is beneficial to update duals by solving a linear program, contrary to a conjecture by Cook and Rohe.},
  langid = {english},
  file = {/Users/dvdxl/Zotero/storage/7JQFIAS4/Kolmogorov - 2009 - Blossom V a new implementation of a minimum cost perfect matching algorithm.pdf}
}

@article{billeTreeCompressionTop2015,
  title = {Tree Compression with Top Trees},
  author = {Bille, Philip and Gørtz, Inge Li and Landau, Gad M. and Weimann, Oren},
  date = {2015-08},
  journaltitle = {Information and Computation},
  shortjournal = {Information and Computation},
  volume = {243},
  pages = {166--177},
  issn = {08905401},
  doi = {10.1016/j.ic.2014.12.012},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0890540114001643},
  urldate = {2025-08-18},
  langid = {english},
  file = {/Users/dvdxl/Zotero/storage/CMARPHMT/Bille et al. - 2015 - Tree compression with top trees.pdf}
}

@article{gawrychowskiLZ77FactorisationTrees2016,
  title = {{{LZ77 Factorisation}} of {{Trees}}},
  author = {Gawrychowski, Pawel and Jez, Artur},
  editor = {Lal, Akash and Akshay, S. and Saurabh, Saket and Sen, Sandeep},
  date = {2016},
  journaltitle = {LIPIcs, Volume 65, FSTTCS 2016},
  volume = {65},
  pages = {35:1-35:15},
  publisher = {Schloss Dagstuhl – Leibniz-Zentrum für Informatik},
  issn = {1868-8969},
  doi = {10.4230/LIPICS.FSTTCS.2016.35},
  url = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.FSTTCS.2016.35},
  urldate = {2025-08-18},
  abstract = {We generalise the fundamental concept of LZ77 factorisation from strings to trees. A tree is represented as a collection of edge-disjoint fragments that either consist of one node or has already occurred earlier (in the BFS order). Similarly as for strings, such a collection uniquely determines the tree, so by minimising the number of fragments we obtain a compressed representation of the tree. We show that our generalisation has several useful properties of the standard LZ77 factorisation: it can be computed in polynomial time and its simpler variant in linear time; its size is not larger than the smallest grammar for a tree; it can be transformed (in linear time) into a tree grammar of size O(rg log(n/(rg))), where n is the size of the tree, g the size of the smallest grammar for this tree and r the maximal arity of the nodes in the tree, which matches a recent bound of Jeż and Lohrey [STACS 2014], but with a simpler and more modular proof.},
  isbn = {9783959770279},
  langid = {english},
  keywords = {Grammar compression,LZ77,SLP,Tree compression,Tree grammars},
  file = {/Users/dvdxl/Zotero/storage/5YL6WUZC/Gawrychowski e Jez - 2016 - LZ77 Factorisation of Trees.pdf}
}

@book{navarro2016compact,
  title     = {Compact Data Structures: A Practical Approach},
  author    = {Gonzalo Navarro},
  year      = {2016},
  publisher = {Cambridge University Press}
}

@article{berstel2010minimization,
  title={Minimization of automata},
  author={Berstel, Jean and Boasson, Luc and Carton, Olivier and Fagnot, Isabelle},
  journal={arXiv preprint arXiv:1010.5318},
  year={2010}
}

@article{equiGraphsCannotBe2023,
  title = {Graphs Cannot Be Indexed in Polynomial Time for Sub-Quadratic Time String Matching, Unless {{SETH}} Fails},
  author = {Equi, Massimo and Mäkinen, Veli and Tomescu, Alexandru I.},
  date = {2023-10},
  journaltitle = {Theoretical Computer Science},
  shortjournal = {Theoretical Computer Science},
  volume = {975},
  pages = {114128},
  issn = {03043975},
  doi = {10.1016/j.tcs.2023.114128},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0304397523004413},
  urldate = {2025-08-22},
  langid = {english},
  file = {/Users/dvdxl/Zotero/storage/TNXYRG53/Equi et al. - 2023 - Graphs cannot be indexed in polynomial time for sub-quadratic time string matching, unless SETH fail.pdf}
}

@article{manziniRationalConstructionWheeler2024,
  title = {The {{Rational Construction}} of a {{Wheeler DFA}}},
  author = {Manzini, Giovanni and Policriti, Alberto and Prezza, Nicola and Riccardi, Brian},
  editor = {Inenaga, Shunsuke and Puglisi, Simon J.},
  date = {2024},
  journaltitle = {LIPIcs, Volume 296, CPM 2024},
  volume = {296},
  pages = {23:1-23:15},
  publisher = {Schloss Dagstuhl – Leibniz-Zentrum für Informatik},
  issn = {1868-8969},
  doi = {10.4230/LIPICS.CPM.2024.23},
  url = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.CPM.2024.23},
  urldate = {2025-08-23},
  abstract = {Deterministic Finite Wheeler Automata are a natural generalisation to regular languages of the theory of compressed data structures originated by the introduction of the Burrows-Wheeler transform. Indeed, if we can find a Wheeler automaton recognizing a given language L, such automaton can be used to design time and space efficient algorithms for representing and searching L. In this paper we introduce an alternative representation of Deterministic Wheeler Automata by showing that a natural map between strings and rational numbers in Qr0, 1q can be extended to represent the automaton’s states as intervals in Qr0, 1q. Using this representation it emerges a natural relationship between automata properties and some properties of real numbers. In addition, such representation enables us to formulate problems related to automata in a numerical setting. Although at the moment the numerical approach does not lead to time efficient algorithms, we believe this new perspective deserves further consideration. As a further demonstration of the convenience of this new representation, we use it to provide a simple proof of an unexpected result on regular languages. More precisely, we compare the size of the smallest Wheeler automaton recognizing a given language L with respect to the size of the smallest automaton, possibly non-Wheeler, recognizing the same language. We show settings in which there can be an exponential gap between the two sizes, and we discuss the implications of this result on the problem of representing regular languages.},
  isbn = {9783959773263},
  langid = {english},
  keywords = {Co-lexicographical Sorting,Deterministic Finite Automata,Graph Indexing,String Matching,Theory of computation → Formal languages and automata theory,Theory of computation → Pattern matching,Wheeler languages},
  file = {/Users/dvdxl/Zotero/storage/AAVVGKB2/Manzini et al. - 2024 - The Rational Construction of a Wheeler DFA.pdf}
}

@incollection{dilworth1990decomposition,
  title={A decomposition theorem for partially ordered sets},
  author={Dilworth, Robert P},
  booktitle={The Dilworth Theorems: Selected Papers of Robert P. Dilworth},
  pages={7--12},
  year={1990},
  publisher={Springer}
}

@article{alanko2021wheeler,
  title={Wheeler languages},
  author={Alanko, Jarno and D'Agostino, Giovanna and Policriti, Alberto and Prezza, Nicola},
  journal={Information and Computation},
  volume={281},
  pages={104820},
  year={2021},
  publisher={Elsevier}
}